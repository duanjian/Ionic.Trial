//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.17929
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.17929 版自动生成。
// 
#pragma warning disable 1591

namespace Trial.Backend.RemoteService.com.dfhe.appservicedevelopment {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="NewsAndInfosManagementSoap", Namespace="http://tempuri.org/")]
    public partial class NewsAndInfosManagement : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private MySoapHeader mySoapHeaderValueField;
        
        private System.Threading.SendOrPostCallback GetInfoListAboutFocusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInfomationListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateInfoClickOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubInfoCommentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInfoCommentListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPublicCategoryListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNameBySubjectIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPublicCourseListOperationCompleted;
        
        private System.Threading.SendOrPostCallback PublicCoursePlayOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubInfoCourseCommentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInfoCourseCommentListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPushInfoOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public NewsAndInfosManagement() {
            this.Url = global::Trial.Backend.RemoteService.Properties.Settings.Default.Trial_Backend_RemoteService_com_dfhe_appservicedevelopment_NewsAndInfosManagement;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public MySoapHeader MySoapHeaderValue {
            get {
                return this.mySoapHeaderValueField;
            }
            set {
                this.mySoapHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetInfoListAboutFocusCompletedEventHandler GetInfoListAboutFocusCompleted;
        
        /// <remarks/>
        public event GetInfomationListCompletedEventHandler GetInfomationListCompleted;
        
        /// <remarks/>
        public event GetInfoCompletedEventHandler GetInfoCompleted;
        
        /// <remarks/>
        public event UpdateInfoClickCompletedEventHandler UpdateInfoClickCompleted;
        
        /// <remarks/>
        public event SubInfoCommentCompletedEventHandler SubInfoCommentCompleted;
        
        /// <remarks/>
        public event GetInfoCommentListCompletedEventHandler GetInfoCommentListCompleted;
        
        /// <remarks/>
        public event GetPublicCategoryListCompletedEventHandler GetPublicCategoryListCompleted;
        
        /// <remarks/>
        public event GetNameBySubjectIdCompletedEventHandler GetNameBySubjectIdCompleted;
        
        /// <remarks/>
        public event GetPublicCourseListCompletedEventHandler GetPublicCourseListCompleted;
        
        /// <remarks/>
        public event PublicCoursePlayCompletedEventHandler PublicCoursePlayCompleted;
        
        /// <remarks/>
        public event SubInfoCourseCommentCompletedEventHandler SubInfoCourseCommentCompleted;
        
        /// <remarks/>
        public event GetInfoCourseCommentListCompletedEventHandler GetInfoCourseCommentListCompleted;
        
        /// <remarks/>
        public event GetPushInfoCompletedEventHandler GetPushInfoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInfoListAboutFocus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetInfoListAboutFocus(int showCount, string version) {
            object[] results = this.Invoke("GetInfoListAboutFocus", new object[] {
                        showCount,
                        version});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetInfoListAboutFocusAsync(int showCount, string version) {
            this.GetInfoListAboutFocusAsync(showCount, version, null);
        }
        
        /// <remarks/>
        public void GetInfoListAboutFocusAsync(int showCount, string version, object userState) {
            if ((this.GetInfoListAboutFocusOperationCompleted == null)) {
                this.GetInfoListAboutFocusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInfoListAboutFocusOperationCompleted);
            }
            this.InvokeAsync("GetInfoListAboutFocus", new object[] {
                        showCount,
                        version}, this.GetInfoListAboutFocusOperationCompleted, userState);
        }
        
        private void OnGetInfoListAboutFocusOperationCompleted(object arg) {
            if ((this.GetInfoListAboutFocusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInfoListAboutFocusCompleted(this, new GetInfoListAboutFocusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInfomationList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetInfomationList(int pageIndex, int pageSize, string time, string version) {
            object[] results = this.Invoke("GetInfomationList", new object[] {
                        pageIndex,
                        pageSize,
                        time,
                        version});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetInfomationListAsync(int pageIndex, int pageSize, string time, string version) {
            this.GetInfomationListAsync(pageIndex, pageSize, time, version, null);
        }
        
        /// <remarks/>
        public void GetInfomationListAsync(int pageIndex, int pageSize, string time, string version, object userState) {
            if ((this.GetInfomationListOperationCompleted == null)) {
                this.GetInfomationListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInfomationListOperationCompleted);
            }
            this.InvokeAsync("GetInfomationList", new object[] {
                        pageIndex,
                        pageSize,
                        time,
                        version}, this.GetInfomationListOperationCompleted, userState);
        }
        
        private void OnGetInfomationListOperationCompleted(object arg) {
            if ((this.GetInfomationListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInfomationListCompleted(this, new GetInfomationListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetInfo(int infoId, int sourceId) {
            object[] results = this.Invoke("GetInfo", new object[] {
                        infoId,
                        sourceId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetInfoAsync(int infoId, int sourceId) {
            this.GetInfoAsync(infoId, sourceId, null);
        }
        
        /// <remarks/>
        public void GetInfoAsync(int infoId, int sourceId, object userState) {
            if ((this.GetInfoOperationCompleted == null)) {
                this.GetInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInfoOperationCompleted);
            }
            this.InvokeAsync("GetInfo", new object[] {
                        infoId,
                        sourceId}, this.GetInfoOperationCompleted, userState);
        }
        
        private void OnGetInfoOperationCompleted(object arg) {
            if ((this.GetInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInfoCompleted(this, new GetInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateInfoClick", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateInfoClick(int infoId, int sourceId) {
            object[] results = this.Invoke("UpdateInfoClick", new object[] {
                        infoId,
                        sourceId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateInfoClickAsync(int infoId, int sourceId) {
            this.UpdateInfoClickAsync(infoId, sourceId, null);
        }
        
        /// <remarks/>
        public void UpdateInfoClickAsync(int infoId, int sourceId, object userState) {
            if ((this.UpdateInfoClickOperationCompleted == null)) {
                this.UpdateInfoClickOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateInfoClickOperationCompleted);
            }
            this.InvokeAsync("UpdateInfoClick", new object[] {
                        infoId,
                        sourceId}, this.UpdateInfoClickOperationCompleted, userState);
        }
        
        private void OnUpdateInfoClickOperationCompleted(object arg) {
            if ((this.UpdateInfoClickCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateInfoClickCompleted(this, new UpdateInfoClickCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SubInfoComment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SubInfoComment(int infoId, string userId, int sourceId, string content) {
            object[] results = this.Invoke("SubInfoComment", new object[] {
                        infoId,
                        userId,
                        sourceId,
                        content});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SubInfoCommentAsync(int infoId, string userId, int sourceId, string content) {
            this.SubInfoCommentAsync(infoId, userId, sourceId, content, null);
        }
        
        /// <remarks/>
        public void SubInfoCommentAsync(int infoId, string userId, int sourceId, string content, object userState) {
            if ((this.SubInfoCommentOperationCompleted == null)) {
                this.SubInfoCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubInfoCommentOperationCompleted);
            }
            this.InvokeAsync("SubInfoComment", new object[] {
                        infoId,
                        userId,
                        sourceId,
                        content}, this.SubInfoCommentOperationCompleted, userState);
        }
        
        private void OnSubInfoCommentOperationCompleted(object arg) {
            if ((this.SubInfoCommentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubInfoCommentCompleted(this, new SubInfoCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInfoCommentList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetInfoCommentList(int infoId, int pageIndex, int pageSize, string time) {
            object[] results = this.Invoke("GetInfoCommentList", new object[] {
                        infoId,
                        pageIndex,
                        pageSize,
                        time});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetInfoCommentListAsync(int infoId, int pageIndex, int pageSize, string time) {
            this.GetInfoCommentListAsync(infoId, pageIndex, pageSize, time, null);
        }
        
        /// <remarks/>
        public void GetInfoCommentListAsync(int infoId, int pageIndex, int pageSize, string time, object userState) {
            if ((this.GetInfoCommentListOperationCompleted == null)) {
                this.GetInfoCommentListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInfoCommentListOperationCompleted);
            }
            this.InvokeAsync("GetInfoCommentList", new object[] {
                        infoId,
                        pageIndex,
                        pageSize,
                        time}, this.GetInfoCommentListOperationCompleted, userState);
        }
        
        private void OnGetInfoCommentListOperationCompleted(object arg) {
            if ((this.GetInfoCommentListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInfoCommentListCompleted(this, new GetInfoCommentListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPublicCategoryList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPublicCategoryList() {
            object[] results = this.Invoke("GetPublicCategoryList", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPublicCategoryListAsync() {
            this.GetPublicCategoryListAsync(null);
        }
        
        /// <remarks/>
        public void GetPublicCategoryListAsync(object userState) {
            if ((this.GetPublicCategoryListOperationCompleted == null)) {
                this.GetPublicCategoryListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPublicCategoryListOperationCompleted);
            }
            this.InvokeAsync("GetPublicCategoryList", new object[0], this.GetPublicCategoryListOperationCompleted, userState);
        }
        
        private void OnGetPublicCategoryListOperationCompleted(object arg) {
            if ((this.GetPublicCategoryListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPublicCategoryListCompleted(this, new GetPublicCategoryListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNameBySubjectId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetNameBySubjectId(int sid) {
            object[] results = this.Invoke("GetNameBySubjectId", new object[] {
                        sid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNameBySubjectIdAsync(int sid) {
            this.GetNameBySubjectIdAsync(sid, null);
        }
        
        /// <remarks/>
        public void GetNameBySubjectIdAsync(int sid, object userState) {
            if ((this.GetNameBySubjectIdOperationCompleted == null)) {
                this.GetNameBySubjectIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNameBySubjectIdOperationCompleted);
            }
            this.InvokeAsync("GetNameBySubjectId", new object[] {
                        sid}, this.GetNameBySubjectIdOperationCompleted, userState);
        }
        
        private void OnGetNameBySubjectIdOperationCompleted(object arg) {
            if ((this.GetNameBySubjectIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNameBySubjectIdCompleted(this, new GetNameBySubjectIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPublicCourseList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPublicCourseList(int subjectId, int page, int pageSize, string time, string version) {
            object[] results = this.Invoke("GetPublicCourseList", new object[] {
                        subjectId,
                        page,
                        pageSize,
                        time,
                        version});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPublicCourseListAsync(int subjectId, int page, int pageSize, string time, string version) {
            this.GetPublicCourseListAsync(subjectId, page, pageSize, time, version, null);
        }
        
        /// <remarks/>
        public void GetPublicCourseListAsync(int subjectId, int page, int pageSize, string time, string version, object userState) {
            if ((this.GetPublicCourseListOperationCompleted == null)) {
                this.GetPublicCourseListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPublicCourseListOperationCompleted);
            }
            this.InvokeAsync("GetPublicCourseList", new object[] {
                        subjectId,
                        page,
                        pageSize,
                        time,
                        version}, this.GetPublicCourseListOperationCompleted, userState);
        }
        
        private void OnGetPublicCourseListOperationCompleted(object arg) {
            if ((this.GetPublicCourseListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPublicCourseListCompleted(this, new GetPublicCourseListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PublicCoursePlay", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PublicCoursePlay(int courseId, string userId, int sourceId) {
            object[] results = this.Invoke("PublicCoursePlay", new object[] {
                        courseId,
                        userId,
                        sourceId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PublicCoursePlayAsync(int courseId, string userId, int sourceId) {
            this.PublicCoursePlayAsync(courseId, userId, sourceId, null);
        }
        
        /// <remarks/>
        public void PublicCoursePlayAsync(int courseId, string userId, int sourceId, object userState) {
            if ((this.PublicCoursePlayOperationCompleted == null)) {
                this.PublicCoursePlayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPublicCoursePlayOperationCompleted);
            }
            this.InvokeAsync("PublicCoursePlay", new object[] {
                        courseId,
                        userId,
                        sourceId}, this.PublicCoursePlayOperationCompleted, userState);
        }
        
        private void OnPublicCoursePlayOperationCompleted(object arg) {
            if ((this.PublicCoursePlayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PublicCoursePlayCompleted(this, new PublicCoursePlayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SubInfoCourseComment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SubInfoCourseComment(string userId, int courseId, string content, int sourceId) {
            object[] results = this.Invoke("SubInfoCourseComment", new object[] {
                        userId,
                        courseId,
                        content,
                        sourceId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SubInfoCourseCommentAsync(string userId, int courseId, string content, int sourceId) {
            this.SubInfoCourseCommentAsync(userId, courseId, content, sourceId, null);
        }
        
        /// <remarks/>
        public void SubInfoCourseCommentAsync(string userId, int courseId, string content, int sourceId, object userState) {
            if ((this.SubInfoCourseCommentOperationCompleted == null)) {
                this.SubInfoCourseCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubInfoCourseCommentOperationCompleted);
            }
            this.InvokeAsync("SubInfoCourseComment", new object[] {
                        userId,
                        courseId,
                        content,
                        sourceId}, this.SubInfoCourseCommentOperationCompleted, userState);
        }
        
        private void OnSubInfoCourseCommentOperationCompleted(object arg) {
            if ((this.SubInfoCourseCommentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubInfoCourseCommentCompleted(this, new SubInfoCourseCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInfoCourseCommentList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetInfoCourseCommentList(int courseId, int pageIndex, int pageSize, string time) {
            object[] results = this.Invoke("GetInfoCourseCommentList", new object[] {
                        courseId,
                        pageIndex,
                        pageSize,
                        time});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetInfoCourseCommentListAsync(int courseId, int pageIndex, int pageSize, string time) {
            this.GetInfoCourseCommentListAsync(courseId, pageIndex, pageSize, time, null);
        }
        
        /// <remarks/>
        public void GetInfoCourseCommentListAsync(int courseId, int pageIndex, int pageSize, string time, object userState) {
            if ((this.GetInfoCourseCommentListOperationCompleted == null)) {
                this.GetInfoCourseCommentListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInfoCourseCommentListOperationCompleted);
            }
            this.InvokeAsync("GetInfoCourseCommentList", new object[] {
                        courseId,
                        pageIndex,
                        pageSize,
                        time}, this.GetInfoCourseCommentListOperationCompleted, userState);
        }
        
        private void OnGetInfoCourseCommentListOperationCompleted(object arg) {
            if ((this.GetInfoCourseCommentListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInfoCourseCommentListCompleted(this, new GetInfoCourseCommentListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPushInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPushInfo(int relationId, int typeId, int sourceId) {
            object[] results = this.Invoke("GetPushInfo", new object[] {
                        relationId,
                        typeId,
                        sourceId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPushInfoAsync(int relationId, int typeId, int sourceId) {
            this.GetPushInfoAsync(relationId, typeId, sourceId, null);
        }
        
        /// <remarks/>
        public void GetPushInfoAsync(int relationId, int typeId, int sourceId, object userState) {
            if ((this.GetPushInfoOperationCompleted == null)) {
                this.GetPushInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPushInfoOperationCompleted);
            }
            this.InvokeAsync("GetPushInfo", new object[] {
                        relationId,
                        typeId,
                        sourceId}, this.GetPushInfoOperationCompleted, userState);
        }
        
        private void OnGetPushInfoOperationCompleted(object arg) {
            if ((this.GetPushInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPushInfoCompleted(this, new GetPushInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/", IsNullable=false)]
    public partial class MySoapHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string keyField;
        
        private string privateKeyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public string privateKey {
            get {
                return this.privateKeyField;
            }
            set {
                this.privateKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetInfoListAboutFocusCompletedEventHandler(object sender, GetInfoListAboutFocusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInfoListAboutFocusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInfoListAboutFocusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetInfomationListCompletedEventHandler(object sender, GetInfomationListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInfomationListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInfomationListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetInfoCompletedEventHandler(object sender, GetInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateInfoClickCompletedEventHandler(object sender, UpdateInfoClickCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateInfoClickCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateInfoClickCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SubInfoCommentCompletedEventHandler(object sender, SubInfoCommentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubInfoCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubInfoCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetInfoCommentListCompletedEventHandler(object sender, GetInfoCommentListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInfoCommentListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInfoCommentListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPublicCategoryListCompletedEventHandler(object sender, GetPublicCategoryListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPublicCategoryListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPublicCategoryListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetNameBySubjectIdCompletedEventHandler(object sender, GetNameBySubjectIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNameBySubjectIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNameBySubjectIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPublicCourseListCompletedEventHandler(object sender, GetPublicCourseListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPublicCourseListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPublicCourseListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void PublicCoursePlayCompletedEventHandler(object sender, PublicCoursePlayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PublicCoursePlayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PublicCoursePlayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SubInfoCourseCommentCompletedEventHandler(object sender, SubInfoCourseCommentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubInfoCourseCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubInfoCourseCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetInfoCourseCommentListCompletedEventHandler(object sender, GetInfoCourseCommentListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInfoCourseCommentListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInfoCourseCommentListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPushInfoCompletedEventHandler(object sender, GetPushInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPushInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPushInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591